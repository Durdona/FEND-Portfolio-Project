{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fon",
				"font-size"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"font",
				"font-weight"
			],
			[
				"margi",
				"margin-right"
			],
			[
				"ba",
				"background-color\tproperty"
			],
			[
				"paddin",
				"padding\tproperty"
			],
			[
				"paddi",
				"padding\tproperty"
			],
			[
				"auto",
				"auto-fill"
			],
			[
				"max",
				"max-content"
			],
			[
				"di",
				"div\tTag"
			],
			[
				"re",
				"repeat(4"
			],
			[
				"grid-te",
				"grid-template-columns\tproperty"
			],
			[
				"append",
				"appendChild"
			],
			[
				"para",
				"paragraph"
			],
			[
				"new",
				"newElement"
			],
			[
				"creat",
				"createElement\t(script.js)"
			],
			[
				"documen",
				"document\t(script.js)"
			],
			[
				"my",
				"myCustomDiv"
			],
			[
				"appe",
				"appendChild"
			],
			[
				"create",
				"createElement"
			],
			[
				"pro",
				"prototype"
			],
			[
				"get",
				"getClothing"
			],
			[
				"is",
				"isCold"
			],
			[
				"num",
				"num"
			],
			[
				"displ",
				"displayFavorite"
			],
			[
				"messa",
				"messageFunction"
			],
			[
				"favo",
				"favoriteMovie"
			],
			[
				"mesa",
				"messageFunction"
			],
			[
				"movie",
				"movieName"
			],
			[
				"console",
				"console.log"
			],
			[
				"cat",
				"catSays"
			],
			[
				"call",
				"callbackFunc"
			],
			[
				"me",
				"meow"
			],
			[
				"ad",
				"addTen"
			],
			[
				"consol",
				"console.log"
			],
			[
				"rev",
				"reverseMe"
			],
			[
				"padding",
				"padding-right\tproperty"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"margin-",
				"margin-bottom\tproperty"
			],
			[
				"no",
				"nowrap"
			],
			[
				"bord",
				"border-collapse\tproperty"
			],
			[
				"ease",
				"ease-out"
			],
			[
				"border-r",
				"border-radius\tproperty"
			],
			[
				"eas",
				"ease-in-out"
			],
			[
				"marg",
				"margin-left"
			],
			[
				"coor",
				"color\tproperty"
			],
			[
				"uda",
				"udacity_logo_orange.png"
			],
			[
				"tra",
				"transition\tproperty"
			],
			[
				"rgba",
				"rgba()"
			],
			[
				"opa",
				"opacity"
			],
			[
				"he",
				"height\tproperty"
			],
			[
				"padd",
				"padding-top\tproperty"
			],
			[
				"inli",
				"inline-block"
			],
			[
				"box",
				"box-sizing\tproperty"
			],
			[
				"project",
				"project_three\t(index.html)"
			],
			[
				"proje",
				"project_two\t(index.html)"
			],
			[
				"src",
				"srcset\tAttr"
			],
			[
				"min",
				"min-width\t(styles.css)"
			],
			[
				"grun",
				"grunt-contrib-watch\t(package.json)"
			],
			[
				"li",
				"li\tTag"
			],
			[
				"pa",
				"padding-top\tproperty"
			],
			[
				"abl",
				"absolute"
			],
			[
				"ddd",
				"darkgoldenrod"
			],
			[
				"sp",
				"span\tTag"
			],
			[
				"dat",
				"data-th"
			],
			[
				"attr",
				"attr()"
			],
			[
				"flex",
				"flex-wrap\tproperty"
			],
			[
				"flex-",
				"flex-grow\tproperty"
			],
			[
				"ab",
				"absolute"
			],
			[
				"pos",
				"position\tproperty"
			],
			[
				"max-",
				"max-width\tproperty"
			],
			[
				"po",
				"pointer"
			],
			[
				"borde",
				"border-radius"
			],
			[
				"pading",
				"padding-left"
			],
			[
				"bor",
				"border-radius\t(styles.css)"
			],
			[
				"wid",
				"width"
			],
			[
				"color",
				"colorPicker\t(index.html)"
			],
			[
				"m",
				"makeGrid"
			],
			[
				"input",
				"inputWeight\t(index.html)"
			],
			[
				"in",
				"input"
			],
			[
				"inpu",
				"input"
			],
			[
				"text-de",
				"text-decoration"
			],
			[
				"wi",
				"width\tAttr"
			],
			[
				"border",
				"border-color"
			],
			[
				"url",
				"url()"
			],
			[
				"back",
				"background"
			],
			[
				"padding-botto",
				"padding-bottom"
			],
			[
				"ju",
				"justify"
			],
			[
				"line",
				"line-height"
			],
			[
				"sa",
				"sans-serif"
			],
			[
				"lin",
				"line-height"
			],
			[
				"Hel",
				"Helvetica\t(test.css)"
			],
			[
				"font-s",
				"font-style"
			],
			[
				"text-a",
				"text-align"
			],
			[
				"al",
				"alt\tAttr"
			],
			[
				"text",
				"text-decoration-color"
			],
			[
				"cur",
				"cursor"
			],
			[
				"i",
				"initial"
			],
			[
				"u",
				"uppercase"
			],
			[
				"text-dec",
				"text-decoration-line"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "\n// ~~~~~~~~~Regular Function ~~~~~~~~~~~~~~\n\n// declares the sayHello function \nfunction sayHello() {\n\tvar message = \"Hello World!\";\n\treturn message;  //returns value instead of printing it \n}\n\n// function returns \"Hello World!\" and console.log prints the return value\nconsole.log(sayHello()); \n \n// Prints: \"Hello World!\"\n \n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n//\nfunction findAverage(x, y){  // declares the findAverage function; parameter is always going to be a variable name and appears in the function declaration. here (x, y) are parameters \n\tvar answer = (x + y) / 2;\n\treturn answer;\n}\nvar avg = findAverage(5, 9); \t// an argument is always going to be a value (i.e. any of the JavaScript data types - a number, a string, a boolean )\nconsole.log(avg);\n \n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n//\nfunction sleep(){\n\tconsole.log('I am sleepy!');\n\treturn 'zzz';   \n\treturn 'snore';\n}\nsleep();   \n\n// The function will return \"zzz\" and print \"I'm sleepy!\" to the console. \"snore\" will not be returned since the first return statement will exit the function.\n \n\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\nfunction square(x) {\n\treturn x * x;\n}\nfunction subtractFour(x){\n\treturn square(x) - 4;\n}\n\nconsole.log(subtractFour(4)); \n \n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n\nfunction test(){\n\treturn 1;\n\treturn 2;\n}\ntest(); // 1 will be returned! Once the code evaluates the first return statement, the function finishes. The second return statement will never be reached.\n \n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n\n// returns the sum of two numbers\nfunction add (x, y){\n\treturn x + y;\n} \n\n// returns the value of a number divided by 2 \nfunction divideByTwo(num) {\n\treturn num / 2;\n}\n\nvar sum = add(5, 7); // call the 'add' function and store the returned value in the 'sum' variable \nvar average = divideByTwo(sum); // call the \"divideByTwo\" function and store the returned value in the \"average\" variable\n\n \n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n//\n\nfunction addTen(x, y){\n\treturn x + y + 10;\n}\nfunction divideByThree(z){\n\treturn z / 3;\n}\nvar addition = addTen(15, 10); //the 'addition' variable will be assigned the value of 35 \nvar division = divideByThree(addition); // passes the value of 35 as an argument into the divideByThree function\nconsole.log(division); // consoles log 35/3 = 11.666666\n \n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~~~~~~~~~~~SCOPE~~~~~~~~~~~~~~~~~~~\n//\n\nvar james = \"I'm looking for this book...\"; //Variables in Global Scope can be accessed everywhere within the program - All functions in your program can access variables defined in global scope.\n\nfunction library(){\n\n\tvar librarian = \"Oh you'll want to look in the classic literature section, follow me!\"; // Variable in Function/Local Scope - an identifier is defined inside of a function, \n\t// it will be visible everywhere inside that function even inside other functions inside that function. \n    // The variable 'librarian' has functional scope and it's accessible in both the 'library' function and the 'classicLiterature' function\n\tfunction classicLiterature(){\n\t\tvar book = \"Great Expectations\"; // the 'book' also has a function scope, but it is only visible in the 'classicLiterature' function.  \n\t}\n}\n \n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~Function Expression - Anonymous Function ~~~~~~~~~~~\n// Function Expression: When a function is assigned to a variable. The function can be named, or anonymous. Use the variable name to call a function defined in a function expression.\n\n//\n\nvar catSays = function(max){\n\tvar catMessage = \" \";\n\tfor (var i =0; i < max; i ++){\n\t\tcatMessage += 'meow';\n\t}\n\treturn catMessage;\n};\nconsole.log(catSays(4)); // function expression must be accessed via variable name only \n\n \n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\nfunction cat(){ // main function which holds two functions inside\n\n\tfunction purr(){  // regular function which makes sound\n\t\treturn 'purrrr !';\n\t}\n\tconsole.log(purr()); // calling function purr so that returned value gets print out. In case I just type console.log(purr); I will the function itself \n\n\tvar meow = function(max){  // function expression which make another noise based on user's input  \n\t\tvar catMessage = \"\";\n\t\tfor(var i = 0; i < max; i ++){\n\t\t\tcatMessage += \"meow \";\n\t\t}\n\t\treturn catMessage; \n\t}\n\tconsole.log(meow(5)); // calling function catMessage so that its returned value gets printed out after being incremented some number of times \n}\ncat();\n \n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// ~~~~~~~~ Functions as Parameters  ~~~~~~~~~~~\n//\nvar catSays = function(max) { //function expression catSays \n\tvar catMessage = \" \";\n\tfor(var i = 0; i < max; i++ ) {\n\t\tcatMessage += \"meow \";\n\t}\n\treturn catMessage; \n}; \n\nfunction helloCat(callbackFunc) { // function declaration helloCat accepting a callback\n\treturn 'Hello ' + callbackFunc(4);  //if I don't pass a parameter it gives an error \n}\n\nhelloCat(catSays);  // in function expression we always call it using variable name \n\n \n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// \n\n// Function expression that assigns the function displayFavroite \n// to the variable favoriteMovie \nvar favoriteMovie = function displayFavorite(movieName) { // I could also miss naming a function 'displayFavorite' no effect on result at all \n\tconsole.log('My favorite movie is ' + movieName);\n};\n\n\n// Function declaration that has two parameters: a function for displaying a message, along with a name of a movie\nfunction movies(messageFunction, name) {\n\tmessageFunction(name); \n}\n\n// Call the movies function, pass in the favoriteMovie and name of movie \nmovies(favoriteMovie, \"Finding Nemo \");\n\n// BUT you could also have bypassed the first assignment of the function, by passing the function to the movies() function inline.// \n// another approach to the same output above //\n\n// Function declaration that takes in two arguments: a function for displaying, along with a name of a movie \nfunction movies(messageFunction, name){\n\tmessageFunction(name);\n}\n\n//You can even pass a function into another function inline. This pattern is commonly used in JavaScript, and can be helpful streamlining your code.\n// Call the movies function, pass in the function and name of movie \nmovies(function displayFavorite(movieName) {\n\tconsole.log('My favorite movie is ' + movieName);\n}, \"Finding Nemo\"); \n\n \n\n// ~~~~~~~~~~~~~~~~~~ QUIZ: ANONYMOUS FUNCTION ~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// Write an anonymous function expression that stores a function in a variable called \"laugh\" and outputs the number of \"ha\"s that you pass in as an argument.\nvar laugh = function(count){\n\tvar laugher = \" \";\n\tfor(i = 0; i < count; i++){\n\t\tlaugher += \"ha \";\n\t}\n\treturn laugher + \" !\";\n}\nconsole.log(laugh(3));\n\n// ~~~~~~~~~~~~~~~~~~ QUIZ: FUNCTION EXPRESSION ~~~~~~~~~~~~~~~~~~~~~~~~~\n// Write a named function expression that stores the function in a variable called cry and returns \"boohoo!\". Don't forget to call the function using the variable name, not the function name:\nvar cry = function tears(){\n\treturn \"boohoo!\";\n}\nconsole.log(cry());\n\n \n// ~~~~~~~~~~~~~~~~~~ QUIZ: INLINE FUNCTIONS ~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// Call the emotions() function so that it prints the output you see below, but instead of passing the laugh() function as an argument, pass an inline function expression instead.\n\n//emotions(\"happy\", laugh(2)); // you can use your laugh function from the previous quizzes \n// Prints: \"I am happy, haha!\"\n\n// Do not change this code \n\nfunction emotions(myString, myFunc) {\n\tconsole.log(\"I am \" + myString + \", \" + myFunc(2));\n}\n\n// Your code goes here \n// call the emotions function here and pass in an inline function expression \nemotions('happy', function(count) {\n\tvar k = 0;\n\tvar text = \" \";\n\twhile (k < count) {\n\t\ttext += \"ha\";\n\t\tk ++;\n\t}\n\treturn text + \"!\"; \n})\n\n \n\n// ~~~~~~~~~~~~~~~~~~ SYNTAX ~~~~~~~~~~~~~~~~~~~~~~~~~\n//\nfunction getClothing(isCold) {\n\tif (isCold) {\n\t\tlet freezing = \"Grab a jacket! \";\n\t} else {\n\t\tlet hot = \"It's a shorts kind of day. \";\n\t\treturn freezing;\n\t\tconsole.log(freezing);\n\n\t}\n}\nconsole.log(getClothing(false));\n \n\n// ~~~~~~~~~~~~~~~~~~ FAMILY OF FOR LOOPS ~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~~~~~~~~~~~ for  LOOP ~~~~~~~~~~~~~~~~~~~~~~~~~\n// The for loop and the for...in loop, to loop over any type of data that is iterable (meaning it follows the iterable protocol which we'll look at in lesson 3). \n// By default, this includes the data types String, Array, Map, and Set—notably absent from this list is the Object data type (i.e. {}). Objects are not iterable, by default.\n//\nconst digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nfor (let i=0; i < digits.length; i++) {\n\tconsole.log(digits[i]);\n}\n \n\n// ~~~~~~~~~~~~~~~~~~ for ... in LOOP ~~~~~~~~~~~~~~~~~~~~~~~~~\n//\nconst digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nfor (const index in digits){\n\tconsole.log(digits[index]);\n}\n \n// Also, the for...in loop can get you into big trouble when you need to add an extra method to an array (or another object).\n// Because for...in loops loop over all enumerable properties, this means if you add any additional properties to the array's prototype, then those properties will also appear in the loop.\n//\nArray.prototype.decimalfy = function(){\n\tfor(let i = 0; i < this.length; i++){\n\t\tthis[i] = this[i].toFixed(2);\n\t}\n};\n\nconst digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nfor(const index in digits) {\n\tconsole.log(digits[index]);\n}\n// Gross! This is why for...in loops are discouraged when looping over arrays.\n \n\n// ~~~~~~~~~~~~~~~~~~ forEach() LOOP ~~~~~~~~~~~~~~~~~~~~~~~~~\n// The forEach loop is another type of 'for' loop in JavaScript. However, forEach() is actually an array method, so it can only be used exclusively with arrays. \n// There is also no way to stop or break a forEach loop. If you need that type of behavior in your loop, you will have to use a basic for loop. \n\n// ~~~~~~~~~~~~~~~~~~ for ... of LOOP ~~~~~~~~~~~~~~~~~~~~~~~~~\n //\n\n// The 'for... of' loop is used to loop over any type of data that is iterable. \n// You write a 'for...of' loop almost exactly like you would write a 'for..in' loop, except you swap out 'in' with 'of' and you can drop the index. \nconst digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nfor (const index of digits) {\n\tconsole.log(digits[index]); // pay attention you are putting 'index' variable inside array not 'digits'\n} // This makes the 'for...of' loop the most concise version of all the for loops.\n\n// TIP: It is good practice to use plural names for objects that are collections of values. That way, when you loop over the collection, you can use the singular version \n// of the name when referencing individual values in the collection. For example, for(const button of buttons) {...}\nconst digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nfor (let digit of digits) {\n\tconsole.log(digits[digit]); // pay attention you are putting 'digit' variable inside array not 'digits'\n}\n \n\n// \n// But wait, there’s more! The for...of loop also has some additional benefits that fix the weaknesses of the for and for...in loops.\n//You can stop or break a for...of loop at anytime.\nconst digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nfor(const digit of digits) {\n\tif (digit % 2 === 0) {\n\t\tcontinue;\n\t} \n\tconsole.log(digit); // pay attention you are console logging 'digit' variable not 'digits'\n}\n \n\n//\n\n// And you don't have to worry about adding new properties to objects. The for...of loop will only loop over the values in the object. \n// The Array.prototype property represents the prototype for the Array constructor and allows you to add new properties and methods to all Array objects.\n// The toFixed() method converts a number into a string, keeping a specified number of decimals.\nArray.prototype.decimalfy = function(){\n\tfor(i =0; i<this.length; i ++){\n\t\tthis[i] = this[i].toFixed(2);\n\t}\n}\nconst digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nfor (const digit of digits){\n\tconsole.log(digit); \n}\n\n \n// ~~~~~~~~~~~~~~~~~~~~~~~~ QUIZ: Writing a For ... of Loop ~~~~~~~~~~~~~~~~~~~~~\n// Loop through each day in the 'days' array; Capitalize the first letter of the day and prints the day out to the console. \n//\n\nconst days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n\n// your code goes here \nfor(const day of days) {\n\tconsole.log(day.charAt(0).toUpperCase() + day.slice(1));\n} \n \n\n// ~~~~~~~~~~~~~~~~~~~~~~~~    NODE Interface - https://developer.mozilla.org/en-US/docs/Web/API/Node ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// ~~~~~~~~~~~~~~~~~~~~~~~~    ELEMENT Interface - https://developer.mozilla.org/en-US/docs/Web/API/Element ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// ~~~~~~~~~~~~~~~~~~~~~~~~    We saw that both of these interfaces have properties and methods. We also saw how the Element Interface inherits all of the properties and methods from the Node interface. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \n// ~~~~~~~~~~~~~~~~~~~~~~~~    List of WEB API Interfaces - https://developer.mozilla.org/en-US/docs/Web/API ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// ~~~~~~~~~~~~~~~~~~~~~~~~    jQuery website - https://jquery.com/ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// ~~~~~~~~~~~~~~~~~~~~~~~~    .querySelector() method on MDN - https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector    ~~~~~~~~~~~~~~~~\n// ~~~~~~~~~~~~~~~~~~~~~~~~    .querySelectorAll() method on MDN - https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll  ~~~~~~~~~~~~~\n// ~~~~~~~~~~~~~~~~~~~~~~~~    NodeList on MDN  - https://developer.mozilla.org/en-US/docs/Web/API/NodeList   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// document.getElementById('footer');\n// document.getElementsByClassName('brand-color');\n// document.getElementsByTagName('p');\n\n\n\n// The querySelector Method\n// document.querySelector('#header'); // returns the first element that matches the specified selectors\n// document.querySelector('.header');\n// document.querySelector('header');\n// document.querySelectorAll('.header');\n// document.querySelectorAll('.articles p'); //finds all paragraph elements that are descendents of elements that have the class 'article'\n\n\n\n// Note: The querySelector() method only returns the first element that matches the specified selectors. To return all the matches, use the querySelectorAll() method instead.\n// Write the DOM code necessary to select the first element with class: card    --- document.querySelector(.'card');\n\n\n// ~~~~~~~~~~~~~~~~~~~ Lesson 20 - Creating Content with JavaScript  ~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~ Update Existing Page Content ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// The .innerHTML property sets or returns the HTML content inside the selected element (i.e. between the tags).\n// There's also the rarely used .outerHTML property. .outerHTML represents the HTML element itself, as well as its children.\n\n// If we just want the text content, we can use the fantastically named .textContent property!\n// myElement.textContent = 'The <strong>Greatest</strong> Ice Cream Flavors'; // doesn't work as expected HTML tag will be printed as a string\n// myElement.innerHTML = 'The <strong>Greatest</strong> Ice Cream Flavors';  // works as expected \n\n// .textContent property returns all of the text regardless of CSS\n// .innerText property returns the text as it would be seen visually. \n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~ Add New Page Content ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//  .createElement();   -- https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement\n//  .textContent();       -- \n//  .createTextNode();  -- *creates an paragraph element; *creates a text node; *appends the text node to the paragraph; *appends the paragraph to the tag; \n//  .appendChild();      -- method will add an element as the last child of the parent element. It is impossible to put it as the first child of anywhere else... it has to be the last child. \n//  .insertAdjacentHTML(); -- has to be called with two arguments: *the location of the HTML; *the HTML text that is going to be inserted. Let us insert element in one of the four locations: *beforebegin; *afterbegin; *beforeend; *afterend;  -- https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n\n// ~~~~~~~~~  .createElement(); &  .textContent(); ~~~~~~~~~~~~~~~~~~~~~~~~\n\n// document.createElement('span'); --> const container = document.createElement('span'); --> container.textContent = ', right now!'; \n\n// ~~~~~~~~~\n// const newSpanElement = document.createElement('span'); --> \n// newSpanElement.textContent = ', right now!'; \n// const mainHeading = document.querySelector('h1');\n// mainHeading.appendChild(newSpanElement);\n\n// ~~~~~~~~~ .appendChild(); --  https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n\n// const newSpan = document.createElement('span'); // creates a brand new <span> element \n// const mainHeading = document.querySelector('h1'); // select the first (main) heading of the page \n//  mainHeading.appenChild(newSpan); // add the <span> element as the last child element of the main heading \n\n\n// ~~~~~~~~~  .createTextNode(); ~~~~~~~~~~~~~~~~~~~~~~~~ -- https://developer.mozilla.org/en-US/docs/Web/API/Document/createTextNode\n// const myPara = document.createElement('p');\n// const textOfParagraph = document.createTextNode('I am the text for the paragraph');\n// myPara.appendChild(textOfParagraph); \n// document.body.appendChild(myPara); \n\n\n// ~~~~~~~~~  .insertAdjacentHTML(); ~~~~~~~~~~~~~~~~~~~~~~~~ to put HTML text anywhere around an element -- https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n// const mainHeading = document.querySelector('#main-heading');\n// const htmlTextToAdd = '<h2>Skydiving is fun! </h2>';\n// mainHeading.insertAdjacementHTML('afterend', htmlTextToAdd);\n\n// ~~~~~~~~~~~~ Add a New Page Content RECAP ~~~~~~~~~~~~~~~~~~~~\n// Some important things to note are:\n// *if an element already exists in the DOM and this element is passed to .appendChild(), the `.appendChild() method will move it rather than duplicating it\n// *an element's .textContent property is used more often than creating a text node with the .createTextNode() method\n// *the .insertAdjacentHTML() method's second argument has to be text, you can't pass an element\n\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~ Remove Page Content ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// .removeChild(); -- method requires: *a parent element; *the child element that will be removed; -- https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n// .remove();        -- https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n// .firstElementChild -- will always return the first element, -- https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n// .firstChild -- might return whitespace (if there is any) to preserve the formatting of the underlying HTML source code. -- https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n// .parentElement -- https://developer.mozilla.org/en-US/docs/Web/API/Node/parentElement\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~ Style Page Content ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// .style.<prop> -- https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style\n// .cssText()\n// .setAttribute()\n// .className\n// .classList\n\n// ~~~~~~~~~~~~~~~~~~~  .style.property  ~~~~~~~~~~~~~~~~~~~ -- syntax is perfect for setting one style at a time, but it's not great for controlling multiple styles.\n// const mainHeading = document.querySelector('h1');\n// mainHeading.style.color = 'blue';\n// mainHeading.style.backgroundColor = 'orange';\n// mainHeading.style.fontSize = '3.5em';\n\n// ~~~~~~~~~~~~~~~~~~~ .style.cssText ~~~~~~~~~~~~~~~~~~~ -- property to set multiple CSS styles at once!\n// const mainHeading = document.querySelector('h1');\n// mainHeading.style.cssText = 'color: blue; background-color: orange; font-size: 3.5em';\n\n\n// ~~~~~~~~~~~~~~~~~~~ .setAttribute() ~~~~~~~~~~~~~~~~~~ is Not Just For Styling -- https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style\n// const mainHeading = document.querySelector('h1');\n// mainHeading.setAttribute('style', 'color: blue; background-color: orange; font-size: 3.5em;');\n\n// ~~~~~~~~~~~~~~~~\n\n// The setAttribute() method is not just for styling page elements. \n// You can use this method to set any attribute for an element. If you want to give an element an ID, you can do that!:\n// const mainHeading = document.querySelector('h1');\n// mainHeading.nextElementSibling.setAttribute('id', 'heading-sibling'); // add an ID to the heading's sibling element \n// document.querySelector('#heading-sibling').style.backgroundColor = 'red'; // use the newly added ID to access that element\n\n\n// ~~~~~~~~~~~~~~~~~~~  .className  ~~~~~~~~~~~~~~~~~~~ /**/ use a for loop to loop through the list of class names; /**/  use .push() to add an item to the list; \n// /**/ use .pop() to remove an item from the list;\n// const mainHeading  = document.querySelector('#main-heading');\n// const listOfClasses = mainHeading.className; // store the list of classes in a variable\n// console.log(listOfClasses); // logs out the string \"ank-student jpk-modal\"\n\n\n// ~~~~~~~~~~~~~~~~~~~  .classList  ~~~~~~~~~~~~~~~~~~~ https://developer.mozilla.org/en-US/docs/Web/API/Element/classList\n//  /**/ .add() - to add a class to the list; /**/ .remove() - to remove a class from the list  /**/  .toggle() - to add the class if it doesn't exists or remove it from the list if it does already exist;\n// /**/ .contains() - returns returns a boolean based on if the class exists in the list or not;\n\n// <h1 id=\"main-heading\" class=\"ank-student jpk-modal\">Learn Web Development at Udacity</h1>\n// const mainHeading = document.querySelector('#main-heading');\n// const listOfClasses = mainHeading.classList; // store the list of classes in a variable\n// console.log(listOfClasses); // logs out [\"ank-student\", \"jpk-modal\"]\n\n//~~~~~~~~~~~~~~~~\n \n\n\n// ~~~~~~~~~~~~~~~~~~~ Lesson 21 - Working with Browser Events  ~~~~~~~~~~~~~~~~~~~~~~\n// LIST OF ALL EVENTS --- https://developer.mozilla.org/en-US/docs/Web/Events\n/* The EventTarget method addEventListener() sets up a function that will be called whenever the specified event is delivered to the target. \nCommon targets are Element, Document, and Window, but the target may be any object that supports events (such as XMLHttpRequest). */\n// addEventListener on MDN -- https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n// EventTarget Interface       -- https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n// Introduction to events      -- https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\n\n// Lesson Overview\n// To recap, we will be looking at:\n\t// *Events - what they are\n\t// *Responding to an event - how to listen for an event and respond when one happens\n\t// *Event Data - harness the data that is included with an event\n\t// *Stopping an event - preventing an event from triggering multiple responses\n\t// *Event Lifecycle - the lifecycle stages of an event\n\t// *DOM Readiness - events to know when the DOM itself is ready to be interacted with\n\n// This lesson is chock full of incredibly useful information, so don not skim over anything! \n\n\n// ~~~~~~~~~~~~~~~~~~~~~~ MY IDEAS in CODE \n // What I wanted to accomplish is when you click on h1 tag its text should be changed and alert that, however, I ended up adding span text next to you  \n//\nconst heading = document.querySelector('h1');\nheading.addEventListener('click', function(){\n\tconst newSpan = document.createElement('span');\n\tnewSpan.textContent = 'Click Target!';\n\tconst changedAlert = heading.appendChild(newSpan);\n\talert(changedAlert);\n});\n\n\n// Trying another approach ... This worked FINE :) \n\n\nconst heading = document.querySelector('h1');\nheading.addEventListener('click', function(){\n\t heading.textContent = 'Changed Text';\n});\n\n\n \n\n// Once you click on h1 tag its content should be changed \n\nconst heading = document.querySelector('h1');\n\nheading.addEventListener('click', function(){\n\n\t heading.textContent = 'Changed Text';\n\t \n});\n \n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~   Lesson 21 - Quiz on phases of an Event ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/* 1.  Event dispatch and DOM element flow on W3C -- https://www.w3.org/TR/DOM-Level-3-Events/#event-flow\n\t\ta) capture phase on W3C -- https://www.w3.org/TR/DOM-Level-3-Events/#capture-phase\n\t\tb) target phase on W3C   -- https://www.w3.org/TR/DOM-Level-3-Events/#target-phase\n\t\tc) bubble phase on W3C  -- https://www.w3.org/TR/DOM-Level-3-Events/#bubble-phase\n\n\tExtend on MDN\n\t\ta) Event on MDN -- https://developer.mozilla.org/en-US/docs/Web/API/Event\n\t\tb) Event reference on MDN -- https://developer.mozilla.org/en-US/docs/Web/Events\n\t\tc) addEventListener on MDN -- https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n\n//  So when would you want to use this technique? Well, JavaScript code in the <head> will run before JavaScript code in the <body>, \n//  so if you do have JavaScript code that needs to run as soon as possible, then you could put that code in the <head> and wrap it \n//  in a DOMContentLoaded event listener. This way it will run as early as possible, but not too early that the DOM isn't ready for it.\n*/\n\n// ~~~~~~~~~~~~~~ Event Delegation \n// DOM Event Flow Structure (a picture) -- https://bit.ly/2wzZ7VY\n// Article: Event delegation -- https://javascript.info/events\n// Article: How JavaScript Event Delegation Works -- https://davidwalsh.name/event-delegate\n// DOMContentLoaded Event docs on MDN - https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded\n\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ The 10 Best Coding Challenge Websites for 2018 - https://medium.com/coderbyte/the-10-best-coding-challenge-websites-for-2018-12b57645b654 \n\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Lesson 23: Performance \n// performance.now() on MDN -- https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n// Performance Interface on MDN -- https://developer.mozilla.org/en-US/docs/Web/API/Performance\n// DocumentFragment Interface on MDN -- https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\n// createDocumentFragment docs on MDN -- https://developer.mozilla.org/en-US/docs/Web/API/Document/createDocumentFragment\n\n// ~~~~~~~~~~~~~~~~~~~~ Comparing Performance of codes below \n\n// This one is less preferable since it executes slower \nconst startTime = performance.now();\n\nfor (let k = 1; k <=200; k++){\n\tconst newElement = document.createElement('p');\n\tnewElement.textContent = 'This is paragraph number ' + k;\n\n\tdocument.body.appendChild(newElement);\n}\nconst endTime = performance.now();\nconsole.log('This code took ' + (endTime - startTime) + ' milliseconds.');\n\n// ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // \n\n// This approach is considered to be better approach in comparison with above example\nconst t0 = performance.now();\nconst myCustomDiv = document.createElement('div');  // creating div element \n\nfor (let i = 1; i <= 200; i ++) {\n\tconst newElement = document.createElement('p');   // creating 200 paragraph elements\n\tnewElement.innerText = \"This is paragraph number \" + i;\n\n\tmyCustomDiv.appendChild(newElement);  // appending 200 paragraphs to the 'div'. Once it is done for 200 times\n} \ndocument.body.appendChild(myCustomDiv);  // and finally we append 'div' to the page \n\nconst t1 = performance.now();\nconsole.log(\"Call to doSomething took \" + (t1 - t0) + \" milliseconds.\");\n\n\n// ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // \n\n// However this approach with DocumentFragment is considered to be the most preferable one\n// let's rewrite our code to use DocumentFragment instead of the <div> \n\nconst t0 = performance.now();\nconst fragment = document.createDocumentFragment(); // uses a DocumentFragment instead of a <div> \n\nfor (let j = 0; j < 200; j ++) {\n\tconst newElement = document.createElement('p');\n\t\n\tnewElement.innerText = 'This is paragraph number ' + j;\t\n\n\tfragment.appendChild(newElement);\n}\n\ndocument.body.appendChild(fragment); // reflow and repaint here -- once!\nconst t1 = performance.now();\nconsole.log(\"This code took \" + (t1 - t0) + \" milliseconds.\");\n\n\n// ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // \n\n// ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ III ExploringJS - Objects, Tools and Testing ~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~ // \n// WebAIM checklist items - 2.1.1: http://webaim.org/standards/wcag/checklist#sc2.1.1\n// What is Focus - https://www.w3.org/TR/html5/editing.html#focus-management\n// Web Server for Chrome extension - Web Server for Chrome extension from Chrome Store\n// tabindex on MDN - https://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute\n// \"Skip Navigation\" Links - https://webaim.org/techniques/skipnav/\n// Linking within a page - https://developers.google.com/web/updates/2016/03/focus-start-point?hl=en\n// Focus in Complex Components - Managing Focus - WAI-ARIA Authoring Practices (The ARIA Authoring Practices doc (or \"ARIA Design Patterns doc\") is a great resource for figuring out what kind of keyboard support your complex components should implement.)\n// ARIA Authoring Best Practices (Radio Group) - https://www.w3.org/TR/wai-aria-practices-1.1/#radiobutton\n// Design Patterns and Widgets - https://www.w3.org/TR/wai-aria-practices/#aria_ex\n// document.activeElement - https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement\n// Keyboard Trap - 2.1.2: http://webaim.org/standards/wcag/checklist#sc2.1.2 \n// <dialog> on MDN - https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ",
			"file": "/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/2. Web Programming with JavaScript/Scripts with my Notes/script.js",
			"file_size": 30297,
			"file_write_time": 131807626365034846,
			"settings":
			{
				"buffer_size": 29872,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 384.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"contar",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"mater",
				"Material Theme: Advanced configuration"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/2. Web Programming with JavaScript/Scripts with my Notes"
	],
	"file_history":
	[
		"/C/Users/Admin/Downloads/MemoryGame_Project/MemoryGame_Project/css/styles.css",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/2. Web Programming with JavaScript/Lynda_JavaScript Essential Training/Lesson 4_Functions and Objects_54 min/Exercise Files/04_02/script.js",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/2nd Project_Memory Game/MemoryGame_Project/js/scripts.js",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/Fiverr/memorygame/memory-game/css/styles.css",
		"/C/Users/Admin/Downloads/styles.css",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/AnimalTradingCards/styles.css",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/2nd Project_Memory Game/MemoryGame_Project/css/styles.css",
		"/C/Users/Admin/Downloads/index.html",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/2nd Project_Memory Game/MemoryGame_Project/index.html",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/1st Project_Portfolio/GrowWithGoogle-Portfolio-Project/index.html",
		"/C/Users/Admin/Downloads/fend-project-memory-game-master/fend-project-memory-game-master/css/app.css",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/1st Project_Portfolio/GrowWithGoogle-Portfolio-Project/css/styles.css",
		"/C/Users/Admin/Desktop/course-JS-and-the-DOM-master/site-files/application-caf474fc673fa8d860f542b966ca1080b0066549a3a0899954bbdab5f9f8ad81.css",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/Fiverr/memorygame/memory-game/index.html",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/Fiverr/memorygame/memory-game/script.js",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/Fiverr/memorygame/memory-game/style.css",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/2. Web Programming with JavaScript/Lynda_JavaScript Essential Training/Lesson 4_Functions and Objects_54 min/Exercise Files/04_02/index.html",
		"/C/Users/Admin/Desktop/course-JS-and-the-DOM-master/app.js",
		"/C/Users/Admin/Desktop/course-JS-and-the-DOM-master/index.html",
		"/C/Users/Admin/Desktop/course-JS-and-the-DOM-master/site-files/tars.js",
		"/C/Users/Admin/Downloads/RWDF L5 Start/Start/main.css",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/LESSON~1/COURSE~1/COURSE~1/INDEX~1.HTM",
		"/C/Users/Admin/Downloads/memorygame/memory-game/script.js",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/2. Web Programming with JavaScript/Lynda_Java Essential Training/Lesson 4_Functions and Objects_54 min/Exercise Files/04_07/script.js",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/2. Web Programming with JavaScript/Lynda_Java Essential Training/Lesson 4_Functions and Objects_54 min/Exercise Files/03_07/index.html",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/2. Web Programming with JavaScript/Lynda_Java Essential Training/Lesson 4_Functions and Objects_54 min/Exercise Files/03_07/script.js",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/04_04/04_04/INDEX~1.HTM",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/04_04/04_04/script.js",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/04_03/script.js",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/04_04/script.js",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/04_01/script.js",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/04_01/INDEX~1.HTM",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/04_03/INDEX~1.HTM",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/04_02/script.js",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/04_02/INDEX~1.HTM",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/index.html",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/js/scripts.js",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/css/animate.css",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/js/jquery.textillate.js",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/js/jquery.lettering.js",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/js/introtzikas.js",
		"/C/Users/Admin/Desktop/Grunt Responsive Image/Gruntfile.js",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/css/styles.css",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/Gruntfile.js",
		"/C/Users/Admin/Desktop/Grunt Responsive Image/package.json",
		"/C/Users/Admin/Documents/1_GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/package.json",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/03_08/script.js",
		"/C/Users/Admin/Documents/1_GROW~1/GROWWI~4/GROWWI~1/25E85~1.WEB/Lynda.com/JAVASC~1/EX_FIL~1/EX_FIL~1/EXERCI~1/02_02/INDEX~1.HTM",
		"/C/Users/Admin/AppData/Roaming/Sublime Text 3/Packages/User/.jsbeautifyrc",
		"/C/Users/Admin/AppData/Roaming/Sublime Text 3/Packages/Emmet/Emmet.sublime-settings",
		"/C/Users/Admin/Desktop/Grunt Responsive Image/index.html",
		"/C/Users/Admin/Desktop/Previous Portfolio/Portfolio before adding projects with old comments/PORTFOLIO _Gulp/workflow/2_builds/development/index.html",
		"/C/Users/Admin/Desktop/Previous Portfolio/Portfolio before adding projects with old comments/PORTFOLIO _Gulp/workflow/2_builds/development/js/script.js",
		"/C/Users/Admin/Desktop/Previous Portfolio/2.2 portfolio_new_source _working/styles/styles.css",
		"/C/Users/Admin/Desktop/Previous Portfolio/2.2 portfolio_new_source _working/index.html",
		"/C/Users/Admin/Desktop/test/index.html",
		"/C/Users/Admin/Desktop/test/styles.css",
		"/C/Users/Admin/Desktop/HTML5 Background Video/styles.css",
		"/C/Users/Admin/Desktop/HTML5 Background Video/index.html",
		"/C/Users/Admin/Desktop/HTML5 Background Video/index.htlm",
		"/C/Users/Admin/Documents/GROWWI~1/GROWWI~4/GROWWI~1/WEBFOU~1/RESPON~1/LESSON~2/1688A5~1.QUI/RI-PRO~2/PROJEC~1/GRUNTF~1.JS",
		"/C/Users/Admin/Documents/GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/styles.css",
		"/C/Users/Admin/Desktop/GrowWithGoogle-Portfolio-Project/Gruntfile.js",
		"/C/Users/Admin/Documents/GROWWI~1/GROWWI~4/GROWWI~1/WEBFOU~1/RESPON~1/LESSON~2/1688A5~1.QUI/RI-PRO~2/PROJEC~1/PACKAG~1.JSO",
		"/C/Users/Admin/Desktop/GrowWithGoogle-Portfolio-Project/package.json",
		"/C/Users/Admin/Documents/GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/index.html",
		"/C/Users/Admin/Desktop/Responsive_Image_Project/Project-Part-1-Start/Gruntfile.js",
		"/C/Users/Admin/Desktop/New folder/Gruntfile.js",
		"/C/Users/Admin/Desktop/Responsive_Image_Project/Project-Part-1-Start/package.json",
		"/C/Users/Admin/Desktop/RI-Project-Part-1-Start/Gruntfile.js",
		"/C/Users/Admin/Desktop/RI-Project-Part-1-Start/package.json",
		"/C/Users/Admin/Documents/GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/package.json",
		"/C/Users/Admin/Documents/GrowWithGoogle/Projects/Portfolio/GrowWithGoogle-Portfolio-Project/README.md",
		"/C/Users/Admin/Documents/GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/RWDF L5 Start/Start/index.html",
		"/C/Users/Admin/Documents/GrowWithGoogle/GrowWithGoogle-Animal-Trading-Cards-Project/index.html",
		"/C/Users/Admin/Documents/GrowWithGoogle/GrowWithGoogle-Animal-Trading-Cards-Project/styles.css",
		"/C/Users/Admin/Documents/GrowWithGoogle/GrowWithGoogle-Animal-Trading-Cards-Project/README.md",
		"/C/Users/Admin/Documents/1. GrowWithGoogle/GrowWithGoogle-Animal-Trading-Cards-Project/Notes.md",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/me practicing Tables/table_index2.html",
		"/C/Users/Admin/Documents/GrowWithGoogle-Animal-Trading-Cards-Project/Notes.md",
		"/C/Users/Admin/Documents/GrowWithGoogle-Animal-Trading-Cards-Project/index.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/me practicing Tables/table_index.html",
		"/C/Users/Admin/Documents/GrowWithGoogle-Animal-Trading-Cards-Project/javascript.js",
		"/C/Users/Admin/Documents/GrowWithGoogle-Animal-Trading-Cards-Project/styles.css",
		"/C/Users/Admin/Documents/GrowWithGoogle-Animal-Trading-Cards-Project/README.md",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/6. Responsive Tables_No More Tables/no_more_tables.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/6. Responsive Tables_No More Tables/no_more_tables_index.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/6. Responsive Tables_No More Tables/contained_scrolling_index.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/6. Responsive Tables_No More Tables/contained_scrolling.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/me practicing Tables/tables_styles.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/table_index.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/table_index2.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 15_Optimizations/tables_styles.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/pattern-mostly-fluid-quiz-blankcss/Off_Canvas_Layout.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/11. Quiz Project Update Part 2/RWDF L4 Solution/Solution/responsive.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/11. Quiz Project Update Part 2/RWDF L4 Solution/Solution/index.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/11. Quiz Project Update Part 2/11. Quiz_Project Update Part 2_me/Start/main.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/11. Quiz Project Update Part 2/11. Quiz_Project Update Part 2_me/Start/breakpoints.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/11. Quiz Project Update Part 2/11. Quiz_Project Update Part 2_me/Start/index.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/pattern-mostly-fluid-quiz-blankcss/pattern-mostly-fluid-quiz-blankcss.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/pattern-mostly-fluid-quiz-blankcss/default_styles.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/11. Quiz_Project Update Part 2 rwdf-l4-start/Start/breakpoints.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/11. Quiz_Project Update Part 2 rwdf-l4-start/Start/main.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14_Common Responsive Patterns/11. Quiz_Project Update Part 2 rwdf-l4-start/Start/index.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14/11. Quiz_Project Update Part 2 rwdf-l4-start/Start/main.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14/11. Quiz_Project Update Part 2 rwdf-l4-start/Start/breakpoints.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14/11. Quiz_Project Update Part 2 rwdf-l4-start/Start/index.html",
		"/C/Users/Admin/AppData/Roaming/Sublime Text 3/Packages/HTML-CSS-JS Prettify/HTMLPrettify.sublime-settings",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14/pattern-mostly-fluid-quiz-blankcss/Off_Canvas_Layout.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14/pattern-mostly-fluid-quiz-blankcss/default_styles.css",
		"/C/Users/Admin/AppData/Roaming/Sublime Text 3/Packages/HTML-CSS-JS Prettify/Default (Windows).sublime-keymap",
		"/C/Users/Admin/AppData/Roaming/Sublime Text 3/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc.defaults.json",
		"/C/Users/Admin/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 14/pattern-mostly-fluid-quiz-blankcss/pattern-mostly-fluid-quiz-blankcss.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 11_Quiz Project 1/RWDF L2 Start/Start/index.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 11_Quiz Project 1/RWDF L2 Start/Start/main.css",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 8_CSS Syntax Problem Set_Udacity Site Header/index_udacity_header.html",
		"/C/Users/Admin/Downloads/Compressed/index.html",
		"/C/Users/Admin/Downloads/Compressed/Grow with Google Final Stage_Nano Degree Program/Web Foundations/Lesson 8_CSS Syntax Problem Set_Slack Card/index.html",
		"/C/Users/Admin/Downloads/Compressed/Lesson 21_Project Pixel Art Maker/project-pixel-art-maker-starter-master/designs.js",
		"/C/Users/Admin/Downloads/Compressed/Lesson 21_Project Pixel Art Maker/project-pixel-art-maker-starter-master/index.html",
		"/C/Users/Admin/Downloads/Compressed/Lesson 21_Project Pixel Art Maker/project-pixel-art-maker-starter-master/styles.css",
		"/C/Users/Admin/Downloads/New folder/portfolio_project_1_before launching w_comments-20180115T171220Z-001/portfolio_project_1_before launching w_comments/resources/css/styles.css",
		"/C/Users/Admin/Google Drive/introtzikas.js",
		"/C/Users/Admin/Downloads/Compressed/Lesson 21_Project Pixel Art Maker/project-pixel-art-maker-starter-master/introtzikas.js",
		"/C/Users/Admin/Downloads/Compressed/my_index.html",
		"/C/Users/Admin/Downloads/Compressed/Lesson 8_Animal Trading Cards/fend-animal-trading-cards-master/fend-animal-trading-cards-master/styles.css",
		"/C/Users/Admin/Downloads/Compressed/Lesson 8_Animal Trading Cards/fend-animal-trading-cards-master/fend-animal-trading-cards-master/card.html"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 121.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"red",
			"console",
			"list ",
			"all",
			"event",
			"events",
			"card",
			"color",
			"hero",
			"content",
			"60px",
			"section",
			"div",
			"section",
			"dd",
			"dt",
			"li",
			"adipiscing",
			"Vivamus",
			"rutrum",
			"tincidunt",
			"Presents",
			". ",
			"design",
			"<span>This specific des",
			"302",
			"fading"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/Admin/Documents/1_GrowWithGoogle/Grow With Google Phases/Grow with Google Final Stage_Nano Degree Program/2. Web Programming with JavaScript/Scripts with my Notes/script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29872,
						"regions":
						{
						},
						"selection":
						[
							[
								29748,
								29748
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14782.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CSS Extended Completions":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "index.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 222.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
